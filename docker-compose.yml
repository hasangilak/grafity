version: '3.8'

services:
  # Main Grafity application
  grafity:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: grafity-app
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=grafity123
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - LOG_LEVEL=info
      - RATE_LIMIT_ENABLED=true
      - METRICS_ENABLED=true
      - PROMETHEUS_ENABLED=true
    volumes:
      - grafity-logs:/app/logs
      - grafity-uploads:/app/tmp/uploads
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - grafity-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Neo4j Database
  neo4j:
    image: neo4j:5-community
    container_name: grafity-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    environment:
      # Authentication
      NEO4J_AUTH: neo4j/grafity123
      # Memory configuration
      NEO4J_server_memory_heap_initial__size: 512m
      NEO4J_server_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 1G
      # APOC plugin
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_PLUGINS: '["apoc"]'
      # Performance settings
      NEO4J_dbms_memory_transaction_total_max: 2G
    networks:
      - grafity-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "grafity123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: grafity-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - grafity-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: grafity-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - grafity-network
    profiles:
      - monitoring

  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: grafity-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafity-admin-password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - grafity-network
    profiles:
      - monitoring

  # Optional: Neo4j Browser alternative with better visualization
  neo4j-browser:
    image: neo4j/neo4j-browser:latest
    container_name: grafity-neo4j-browser
    ports:
      - "8080:80"
    environment:
      NEO4J_URL: bolt://neo4j:7687
    depends_on:
      - neo4j
    networks:
      - grafity-network
    profiles:
      - browser

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  redis-data:
    driver: local
  grafity-logs:
    driver: local
  grafity-uploads:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  grafity-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16