version: '3.8'

# Simplified testing setup for @grafity/nx-react plugin
services:
  # Nx Plugin Test Runner
  grafity-plugin-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: tester
    container_name: grafity-plugin-test
    environment:
      - NODE_ENV=test
      - CI=true
    volumes:
      - ./packages/grafity-react:/app/packages/grafity-react:ro
      - ./examples/sample-react-app:/app/examples/sample-react-app:ro
      - test-results:/app/test-results
      - coverage-reports:/app/coverage
      - viz-output:/app/dist/visualizations
    networks:
      - grafity-test-network
    command: ["sh", "-c", "npx nx test grafity-react --ci --codeCoverage"]

  # Integration Test Runner - Tests plugin executors on sample app
  grafity-integration-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: grafity-integration-test
    environment:
      - NODE_ENV=test
    volumes:
      - .:/app
      - /app/node_modules
      - viz-output:/app/dist/visualizations
      - analysis-output:/app/dist/analysis
    networks:
      - grafity-test-network
    command:
      - sh
      - -c
      - |
        echo "=== Building Plugin ===" &&
        npx nx build grafity-react &&
        echo "=== Running Demo Analysis ===" &&
        npm run demo:analyze &&
        echo "=== Running Demo Visualization ===" &&
        npm run demo:visualize &&
        echo "=== Running Demo Pattern Detection ===" &&
        npm run demo:patterns &&
        echo "=== All Integration Tests Passed ==="
    profiles:
      - integration

  # Browser test service (for visual testing with browser MCP)
  grafity-browser-test:
    image: mcr.microsoft.com/playwright:v1.40.0-jammy
    container_name: grafity-browser-test
    environment:
      - NODE_ENV=test
    volumes:
      - viz-output:/visualizations:ro
      - ./tests/browser:/tests:ro
    networks:
      - grafity-test-network
    working_dir: /tests
    command: ["npx", "playwright", "test"]
    profiles:
      - browser

  # New Developer Journey E2E Tests
  grafity-new-developer-journey:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: grafity-new-developer-journey
    environment:
      - NODE_ENV=test
      - CI=true
    volumes:
      - .:/app
      - /app/node_modules
      - test-results:/app/test-results
      - viz-output:/app/dist/visualizations
      - analysis-output:/app/dist/analysis
    networks:
      - grafity-test-network
    command:
      - sh
      - -c
      - |
        echo "ðŸš€ Starting New Developer Journey Tests..." &&
        npx playwright install chromium &&
        npx playwright test tests/e2e/new-developer-journey.spec.ts --reporter=html &&
        echo "âœ… New Developer Journey Tests Complete!"
    profiles:
      - e2e

volumes:
  test-results:
    driver: local
  coverage-reports:
    driver: local
  viz-output:
    driver: local
  analysis-output:
    driver: local

networks:
  grafity-test-network:
    driver: bridge